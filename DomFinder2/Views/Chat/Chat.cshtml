@model DomFinder2.Models.ChatViewModel

@{
    ViewData["Title"] = "Czat z " + Model.OtherUserName;
}

<h2>Czat z @Model.OtherUserName</h2>

<div id="chatContainer" class="chat-container">
    <div id="chatBox" class="chat-box">
        @foreach (var message in Model.Messages)
        {
            <div class="chat-message @(message.SenderId == Model.CurrentUserId ? "sent" : "received")">
                <strong>@(message.SenderId == Model.CurrentUserId ? "Ty" : Model.OtherUserName):</strong>
                <p>@message.Message</p>
                <small>@message.Timestamp</small>
            </div>
        }
    </div>
    <form id="sendMessageForm" method="post" asp-controller="Chat" asp-action="SendMessage" class="send-message-form">
        <input type="hidden" name="receiverId" value="@Model.OtherUserId" />
        <input type="text" name="message" placeholder="Wpisz wiadomość..." required class="message-input" />
        <button type="submit" class="btn btn-primary">Wyślij</button>
    </form>
</div>

@section Styles {
    <style>
        .chat-container {
            display: flex;
            flex-direction: column;
            height: 80vh;
            max-width: 800px;
            margin: 0 auto;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 10px;
            background-color: #f9f9f9;
        }

        .chat-box {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
            border-bottom: 1px solid #ddd;
            margin-bottom: 10px;
        }

        .chat-message {
            margin-bottom: 15px;
            padding: 10px;
            border-radius: 5px;
            max-width: 60%;
        }

            .chat-message.sent {
                background-color: #e1ffc7;
                align-self: flex-end;
            }

            .chat-message.received {
                background-color: #ffffff;
                align-self: flex-start;
            }

            .chat-message strong {
                display: block;
                margin-bottom: 5px;
            }

        .send-message-form {
            display: flex;
            align-items: center;
        }

        .message-input {
            flex: 1;
            padding: 10px;
            margin-right: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>
}

@section Scripts {
    <script src="~/lib/signalr/signalr.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();

        connection.on("ReceiveMessage", function (user, message) {
            const msgClass = user === '@Model.CurrentUserId' ? "sent" : "received";
            const msg = `
                        <div class="chat-message ${msgClass}">
                            <strong>${user === '@Model.CurrentUserId' ? "Ty" : '@Model.OtherUserName'}:</strong>
                            <p>${message}</p>
                        </div>`;
            document.getElementById("chatBox").innerHTML += msg;
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("sendMessageForm").addEventListener("submit", function (event) {
            event.preventDefault();
            const receiverId = this.receiverId.value;
            const message = this.message.value;
            connection.invoke("SendMessage", receiverId, message).catch(function (err) {
                return console.error(err.toString());
            });
            this.message.value = "";
        });
    </script>
}
